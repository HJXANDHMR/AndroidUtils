package utils.view;

import android.content.Context;
import android.util.AttributeSet;
import android.util.Log;
import android.view.MotionEvent;

public class LongPressView extends View {

    private int mLastMotionX, mLastMotionY;
    private boolean isMoved=false;
    private Runnable mLongPressRunnable;
    // 移动的阈值
    private static final int TOUCH_SLOP = 20;

    public LongPressView(Context context, AttributeSet attrs) {
        super(context, attrs);
        mLongPressRunnable = new Runnable() {
            @Override
            public void run() {
                // 回调长按事件
                performLongClick();
            }
        };

    }


    // 事件响应
    @Override
    public boolean onTouchEvent(MotionEvent event) {

        Log.d("onTouchEvent","onTouchEvent");
        return super.onTouchEvent(event);

    }
    

    // 事件分发
    public boolean dispatchTouchEvent(MotionEvent event) {
        int x = (int) event.getX();
        int y = (int) event.getY();

        switch (event.getAction()) {
            case MotionEvent.ACTION_DOWN:
                mLastMotionX = x;
                mLastMotionY = y;
                // 按下 2秒后调用线程
                postDelayed(mLongPressRunnable, 2*1000);
                break;

            case MotionEvent.ACTION_MOVE:
                if (Math.abs(mLastMotionX - x) > TOUCH_SLOP
                        || Math.abs(mLastMotionY - y) > TOUCH_SLOP) {
                    // 移动超过阈值，则表示移动了
                    isMoved=true;
                    removeCallbacks(mLongPressRunnable);
                }

                break;
            case MotionEvent.ACTION_UP:
                if (!isMoved) {
                    performClick();
                }
                isMoved=false;
                removeCallbacks(mLongPressRunnable);
                break;
        }
        //如果 return true，事件会分发给当前 View 并由 dispatchTouchEvent 方法进行消费，同时事件会停止向下传递；
        return  true;
    }

}
